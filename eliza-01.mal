; (load-file "F:\JKL\JK-code\eliza\eliza-01.mal")
; (pat-match '( I need a ?X) '(I need a vacation))

;;; Are x and y equal? (Don't check inside strings)
(def! simple-equal (fn* (x y)
	(if (or (atom x) (atom y ) )
		(= x y)
		(and
			(simple-equal (first x) (first y))
			(simple-equal (rest x) (rest y))))))

; Is X a variable (a symbol beginning with '?'
(def! variable? (fn* (x)
	(and
		(symbol? x)
		(= (char (symbol-name x) 0) "?"))))
		
; True if x is not a sequence, false otherwise. (atomic? '()) is true because () == nil
(def! atomic? (fn* (x)
	(if (sequential? x)
		(if (empty? x)
			true
			false)
		true)))
		
;; Does pattern match input? Any variable can match anything.
(def! pat-match (fn* (pattern input)
	(if (variable? pattern)
		true
		(if (or (atomic? pattern) (atomic? input))
			(= pattern input)
			(and
				(pat-match (first pattern) (first input))
				(pat-match (rest pattern) (rest input)))))))

